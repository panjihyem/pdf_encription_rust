{"$message_type":"diagnostic","message":"file not found for module `application`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":52,"byte_end":68,"line_start":4,"line_end":4,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"mod application;","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `application`, create file \"src\\application.rs\" or \"src\\application\\mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod application` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: file not found for module `application`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod application;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: to create the module `application`, create file \"src\\application.rs\" or \"src\\application\\mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: if there is a `mod application` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `storage`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\mod.rs","byte_start":18,"byte_end":34,"line_start":2,"line_end":2,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub mod storage;","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `storage`, create file \"src\\infrastructure\\storage.rs\" or \"src\\infrastructure\\storage\\mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod storage` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: file not found for module `storage`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\mod.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod storage;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: to create the module `storage`, create file \"src\\infrastructure\\storage.rs\" or \"src\\infrastructure\\storage\\mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: if there is a `mod storage` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file not found for module `wasm`","code":{"code":"E0583","explanation":"A file wasn't found for an out-of-line module.\n\nErroneous code example:\n\n```compile_fail,E0583\nmod file_that_doesnt_exist; // error: file not found for module\n\nfn main() {}\n```\n\nPlease be sure that a file corresponding to the module exists. If you\nwant to use a module named `file_that_doesnt_exist`, you need to have a file\nnamed `file_that_doesnt_exist.rs` or `file_that_doesnt_exist/mod.rs` in the\nsame directory.\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\mod.rs","byte_start":35,"byte_end":48,"line_start":3,"line_end":3,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"pub mod wasm;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to create the module `wasm`, create file \"src\\infrastructure\\wasm.rs\" or \"src\\infrastructure\\wasm\\mod.rs\"","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"if there is a `mod wasm` elsewhere in the crate already, import it with `use crate::...` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0583]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: file not found for module `wasm`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\mod.rs:3:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod wasm;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: to create the module `wasm`, create file \"src\\infrastructure\\wasm.rs\" or \"src\\infrastructure\\wasm\\mod.rs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: if there is a `mod wasm` elsewhere in the crate already, import it with `use crate::...` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"file for module `context` found at both \"src\\presentation\\context.rs\" and \"src\\presentation\\context\\mod.rs\"","code":{"code":"E0761","explanation":"Multiple candidate files were found for an out-of-line module.\n\nErroneous code example:\n\n```ignore (Multiple source files are required for compile_fail.)\n// file: ambiguous_module/mod.rs\n\nfn foo() {}\n\n// file: ambiguous_module.rs\n\nfn foo() {}\n\n// file: lib.rs\n\nmod ambiguous_module; // error: file for module `ambiguous_module`\n                      // found at both ambiguous_module.rs and\n                      // ambiguous_module/mod.rs\n```\n\nPlease remove this ambiguity by deleting/renaming one of the candidate files.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\mod.rs","byte_start":48,"byte_end":64,"line_start":4,"line_end":4,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"pub mod context;","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"delete or rename one of them to remove the ambiguity","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0761]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: file for module `context` found at both \"src\\presentation\\context.rs\" and \"src\\presentation\\context\\mod.rs\"\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\mod.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub mod context;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: delete or rename one of them to remove the ambiguity\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"string literals must not contain more than one class (hint: use `\"border-2\", \"border-dashed\", \"rounded-lg\", \"p-8\", \"text-center\", \"cursor-pointer\", \"transition-colors\"`)","code":null,"level":"error","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":2151,"byte_end":2235,"line_start":70,"line_end":70,"column_start":17,"column_end":101,"is_primary":true,"text":[{"text":"                \"border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\",","highlight_start":17,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: string literals must not contain more than one class (hint: use `\"border-2\", \"border-dashed\", \"rounded-lg\", \"p-8\", \"text-center\", \"cursor-pointer\", \"transition-colors\"`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:70:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \"border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-color\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected a valid html element","code":null,"level":"error","spans":[{"file_name":"src\\presentation\\pages\\settings.rs","byte_start":5922,"byte_end":5923,"line_start":142,"line_end":142,"column_start":98,"column_end":99,"is_primary":true,"text":[{"text":"                                <span class=\"font-medium\">{ self.i18n.t(\"encryption_algorithm\") }:</span>","highlight_start":98,"highlight_end":99}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a valid html element\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\settings.rs:142:98\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m.i18n.t(\"encryption_algorithm\") }:</span>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `storage::local_storage`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\mod.rs","byte_start":125,"byte_end":138,"line_start":6,"line_end":6,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"pub use storage::local_storage::LocalStorage;","highlight_start":18,"highlight_end":31}],"label":"could not find `local_storage` in `storage`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `storage::local_storage`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\mod.rs:6:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use storage::local_storage::LocalStorage;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `local_storage` in `storage`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::context::LoadingProvider`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\app.rs","byte_start":207,"byte_end":252,"line_start":6,"line_end":6,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"use crate::presentation::context::LoadingProvider;","highlight_start":5,"highlight_end":50}],"label":"no `LoadingProvider` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::context::LoadingProvider`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\app.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::LoadingProvider;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingProvider` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::domain::entities::EncryptionStatus`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":82,"byte_end":98,"line_start":3,"line_end":3,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"use crate::domain::entities::{EncryptionStatus, PdfDocument};","highlight_start":31,"highlight_end":47}],"label":"no `EncryptionStatus` in `domain::entities`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":82,"byte_end":98,"line_start":3,"line_end":3,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"use crate::domain::entities::{EncryptionStatus, PdfDocument};","highlight_start":31,"highlight_end":47}],"label":null,"suggested_replacement":"EncryptionParams","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::domain::entities::EncryptionStatus`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:3:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::domain::entities::{EncryptionStatus, PdfDocument};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `EncryptionStatus` in `domain::entities`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `EncryptionParams`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::I18nService`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":118,"byte_end":152,"line_start":4,"line_end":4,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::infrastructure::I18nService;","highlight_start":5,"highlight_end":39}],"label":"no `I18nService` in `infrastructure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::I18nService`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::I18nService;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `I18nService` in `infrastructure`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::i18n`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":48,"byte_end":52,"line_start":2,"line_end":2,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"use crate::infrastructure::i18n::I18nService;","highlight_start":28,"highlight_end":32}],"label":"could not find `i18n` in `infrastructure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::i18n`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\error_boundary.rs:2:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::i18n::I18nService;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `i18n` in `infrastructure`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::context::LoadingContext`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":154,"byte_end":198,"line_start":5,"line_end":5,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"use crate::presentation::context::LoadingContext;","highlight_start":5,"highlight_end":49}],"label":"no `LoadingContext` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::context::LoadingContext`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::LoadingContext;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingContext` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::context::LoadingContext`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\loading_indicator.rs","byte_start":25,"byte_end":69,"line_start":2,"line_end":2,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"use crate::presentation::context::LoadingContext;","highlight_start":5,"highlight_end":49}],"label":"no `LoadingContext` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::context::LoadingContext`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\loading_indicator.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::LoadingContext;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingContext` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::routing`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\navigation.rs","byte_start":74,"byte_end":81,"line_start":3,"line_end":3,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"use crate::presentation::routing::Route;","highlight_start":26,"highlight_end":33}],"label":"could not find `routing` in `presentation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::routing`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\navigation.rs:3:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::routing::Route;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `routing` in `presentation`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved imports `crate::presentation::context::use_theme`, `crate::presentation::context::use_language`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\navigation.rs","byte_start":125,"byte_end":134,"line_start":4,"line_end":4,"column_start":36,"column_end":45,"is_primary":true,"text":[{"text":"use crate::presentation::context::{use_theme, use_language};","highlight_start":36,"highlight_end":45}],"label":"no `use_theme` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\navigation.rs","byte_start":136,"byte_end":148,"line_start":4,"line_end":4,"column_start":47,"column_end":59,"is_primary":true,"text":[{"text":"use crate::presentation::context::{use_theme, use_language};","highlight_start":47,"highlight_end":59}],"label":"no `use_language` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved imports `crate::presentation::context::use_theme`, `crate::presentation::context::use_language`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\navigation.rs:4:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::{use_theme, use_language};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `use_language` in `presentation::context`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `use_theme` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `web_sys::HtmlIframeElement`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":40,"byte_end":57,"line_start":2,"line_end":2,"column_start":15,"column_end":32,"is_primary":true,"text":[{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":15,"highlight_end":32}],"label":"no `HtmlIframeElement` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":40,"byte_end":57,"line_start":2,"line_end":2,"column_start":15,"column_end":32,"is_primary":true,"text":[{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":15,"highlight_end":32}],"label":null,"suggested_replacement":"HtmlBaseElement","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `web_sys::HtmlIframeElement`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:2:15\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse web_sys::{HtmlIframeElement, window};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `HtmlIframeElement` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `HtmlBaseElement`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::I18nService`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":135,"byte_end":169,"line_start":5,"line_end":5,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::infrastructure::I18nService;","highlight_start":5,"highlight_end":39}],"label":"no `I18nService` in `infrastructure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::I18nService`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::I18nService;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `I18nService` in `infrastructure`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `use_cases` in `application`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":87,"byte_end":96,"line_start":3,"line_end":3,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"use crate::application::use_cases::encrypt_pdf_use_case::EncryptPdfUseCase;","highlight_start":25,"highlight_end":34}],"label":"could not find `use_cases` in `application`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `use_cases` in `application`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\encrypt.rs:3:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::application::use_cases::encrypt_pdf_use_case::EncryptPdfUseCase;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `use_cases` in `application`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::context::LoadingContext`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":175,"byte_end":219,"line_start":6,"line_end":6,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"use crate::presentation::context::LoadingContext;","highlight_start":5,"highlight_end":49}],"label":"no `LoadingContext` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::context::LoadingContext`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::LoadingContext;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingContext` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::context::LoadingContext`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":226,"byte_end":270,"line_start":5,"line_end":5,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"use crate::presentation::context::LoadingContext;","highlight_start":5,"highlight_end":49}],"label":"no `LoadingContext` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::context::LoadingContext`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\encrypt.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::LoadingContext;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingContext` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `use_cases` in `application`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":142,"byte_end":151,"line_start":5,"line_end":5,"column_start":25,"column_end":34,"is_primary":true,"text":[{"text":"use crate::application::use_cases::decrypt_pdf_use_case::DecryptPdfUseCase;","highlight_start":25,"highlight_end":34}],"label":"could not find `use_cases` in `application`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `use_cases` in `application`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:5:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::application::use_cases::decrypt_pdf_use_case::DecryptPdfUseCase;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `use_cases` in `application`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::domain::error`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":101,"byte_end":106,"line_start":4,"line_end":4,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use crate::domain::error::PdfError;","highlight_start":20,"highlight_end":25}],"label":"could not find `error` in `domain`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::domain::error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:4:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::domain::error::PdfError;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `error` in `domain`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::context::LoadingContext`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":305,"byte_end":349,"line_start":9,"line_end":9,"column_start":5,"column_end":49,"is_primary":true,"text":[{"text":"use crate::presentation::context::LoadingContext;","highlight_start":5,"highlight_end":49}],"label":"no `LoadingContext` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::context::LoadingContext`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::context::LoadingContext;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingContext` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::I18nService`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":355,"byte_end":389,"line_start":10,"line_end":10,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"use crate::infrastructure::I18nService;","highlight_start":5,"highlight_end":39}],"label":"no `I18nService` in `infrastructure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::I18nService`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::I18nService;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `I18nService` in `infrastructure`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::i18n`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\settings.rs","byte_start":48,"byte_end":52,"line_start":2,"line_end":2,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"use crate::infrastructure::i18n::I18nService;","highlight_start":28,"highlight_end":32}],"label":"could not find `i18n` in `infrastructure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::i18n`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\settings.rs:2:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::i18n::I18nService;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `i18n` in `infrastructure`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::storage::StorageService`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\settings.rs","byte_start":107,"byte_end":153,"line_start":4,"line_end":4,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"use crate::infrastructure::storage::StorageService;","highlight_start":5,"highlight_end":51}],"label":"no `StorageService` in `infrastructure::storage`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::storage::StorageService`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\settings.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::storage::StorageService;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `StorageService` in `infrastructure::storage`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::presentation::routing`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\not_found.rs","byte_start":74,"byte_end":81,"line_start":3,"line_end":3,"column_start":26,"column_end":33,"is_primary":true,"text":[{"text":"use crate::presentation::routing::Route;","highlight_start":26,"highlight_end":33}],"label":"could not find `routing` in `presentation`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::presentation::routing`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\not_found.rs:3:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::presentation::routing::Route;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `routing` in `presentation`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `crate::infrastructure::i18n`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\not_found.rs","byte_start":117,"byte_end":121,"line_start":4,"line_end":4,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"use crate::infrastructure::i18n::I18nService;","highlight_start":28,"highlight_end":32}],"label":"could not find `i18n` in `infrastructure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `crate::infrastructure::i18n`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\not_found.rs:4:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::infrastructure::i18n::I18nService;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `i18n` in `infrastructure`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `settings::SettingsPage`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\mod.rs","byte_start":158,"byte_end":180,"line_start":10,"line_end":10,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"pub use settings::SettingsPage;","highlight_start":9,"highlight_end":31}],"label":"no `SettingsPage` in `presentation::pages::settings`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\pages\\mod.rs","byte_start":168,"byte_end":180,"line_start":10,"line_end":10,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"pub use settings::SettingsPage;","highlight_start":19,"highlight_end":31}],"label":null,"suggested_replacement":"SettingsMsg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `settings::SettingsPage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\mod.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use settings::SettingsPage;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: a similar name exists in the module: `SettingsMsg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `SettingsPage` in `presentation::pages::settings`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `not_found::NotFoundPage`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\mod.rs","byte_start":190,"byte_end":213,"line_start":11,"line_end":11,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"pub use not_found::NotFoundPage;","highlight_start":9,"highlight_end":32}],"label":"no `NotFoundPage` in `presentation::pages::not_found`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\pages\\mod.rs","byte_start":201,"byte_end":213,"line_start":11,"line_end":11,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"pub use not_found::NotFoundPage;","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":"NotFound","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `not_found::NotFoundPage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\mod.rs:11:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use not_found::NotFoundPage;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: a similar name exists in the module: `NotFound`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `NotFoundPage` in `presentation::pages::not_found`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `ring`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":35,"byte_end":39,"line_start":2,"line_end":2,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use ring::digest::{Context, SHA256};","highlight_start":5,"highlight_end":9}],"label":"use of undeclared crate or module `ring`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `ring`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ring::digest::{Context, SHA256};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `ring`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `context::LoadingProvider`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\mod.rs","byte_start":92,"byte_end":116,"line_start":7,"line_end":7,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"pub use context::LoadingProvider;","highlight_start":9,"highlight_end":33}],"label":"no `LoadingProvider` in `presentation::context`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `context::LoadingProvider`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\mod.rs:7:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use context::LoadingProvider;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingProvider` in `presentation::context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `ring`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":4,"byte_end":8,"line_start":1,"line_end":1,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use ring::{aead, pbkdf2};","highlight_start":5,"highlight_end":9}],"label":"use of undeclared crate or module `ring`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `ring`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse ring::{aead, pbkdf2};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `ring`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `rand`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":92,"byte_end":96,"line_start":3,"line_end":3,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"use rand::{thread_rng, RngCore};","highlight_start":5,"highlight_end":9}],"label":"use of undeclared crate or module `rand`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `rand`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rand::{thread_rng, RngCore};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `rand`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unresolved import `loading_indicator::LoadingIndicatorProps`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":387,"byte_end":408,"line_start":13,"line_end":13,"column_start":47,"column_end":68,"is_primary":true,"text":[{"text":"pub use loading_indicator::{LoadingIndicator, LoadingIndicatorProps};","highlight_start":47,"highlight_end":68}],"label":"no `LoadingIndicatorProps` in `presentation::components::loading_indicator`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":387,"byte_end":408,"line_start":13,"line_end":13,"column_start":47,"column_end":68,"is_primary":true,"text":[{"text":"pub use loading_indicator::{LoadingIndicator, LoadingIndicatorProps};","highlight_start":47,"highlight_end":68}],"label":null,"suggested_replacement":"LoadingIndicator","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `loading_indicator::LoadingIndicatorProps`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:13:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use loading_indicator::{LoadingIndicator, LoadingIndicatorProps};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `LoadingIndicatorProps` in `presentation::components::loading_indicator`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `LoadingIndicator`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find attribute `async_trait` in this scope","code":null,"level":"error","spans":[{"file_name":"src\\domain\\repositories\\pdf_repository.rs","byte_start":68,"byte_end":79,"line_start":4,"line_end":4,"column_start":3,"column_end":14,"is_primary":true,"text":[{"text":"#[async_trait(?Send)]","highlight_start":3,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find attribute `async_trait` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\repositories\\pdf_repository.rs:4:3\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[async_trait(?Send)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find attribute `async_trait` in this scope","code":null,"level":"error","spans":[{"file_name":"src\\domain\\repositories\\settings_repository.rs","byte_start":69,"byte_end":80,"line_start":4,"line_end":4,"column_start":3,"column_end":14,"is_primary":true,"text":[{"text":"#[async_trait(?Send)]","highlight_start":3,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find attribute `async_trait` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\repositories\\settings_repository.rs:4:3\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[async_trait(?Send)]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `catch` is not a member of trait `Component`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":903,"byte_end":1085,"line_start":41,"line_end":45,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn catch(&mut self, error: std::error::Error) -> bool {","highlight_start":5,"highlight_end":60},{"text":"        log::error!(\"Error caught by boundary: {:?}\", error);","highlight_start":1,"highlight_end":62},{"text":"        self.error = Some(error.to_string());","highlight_start":1,"highlight_end":46},{"text":"        true","highlight_start":1,"highlight_end":13},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"not a member of trait `Component`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: method `catch` is not a member of trait `Component`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\error_boundary.rs:41:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn catch(&mut self, error: std::error::Error) -> bool {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        log::error!(\"Error caught by boundary: {:?}\", error);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        self.error = Some(error.to_string());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        true\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `Component`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `Closure`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4166,"byte_end":4173,"line_start":116,"line_end":116,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"        let onload = Closure::wrap(Box::new(move || {","highlight_start":22,"highlight_end":29}],"label":"use of undeclared type `Closure`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing one of these structs","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use wasm_bindgen::JsCast;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use crate::Closure;\n","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use wasm_bindgen::JsCast;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use wasm_bindgen::closure::Closure;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `Closure`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:116:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let onload = Closure::wrap(Box::new(move || {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `Closure`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing one of these structs\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use crate::Closure;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use wasm_bindgen::closure::Closure;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find type `Rc` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":329,"byte_end":331,"line_start":11,"line_end":11,"column_start":15,"column_end":17,"is_primary":true,"text":[{"text":"    pub i18n: Rc<I18nService>,","highlight_start":15,"highlight_end":17}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use wasm_bindgen::JsCast;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::rc::Rc;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find type `Rc` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:11:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub i18n: Rc<I18nService>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::rc::Rc;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `yew::prelude::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":34,"byte_end":49,"line_start":2,"line_end":2,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use yew::prelude::*;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":30,"byte_end":51,"line_start":2,"line_end":3,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use yew::prelude::*;","highlight_start":1,"highlight_end":21},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `yew::prelude::*`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse yew::prelude::*;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":4,"byte_end":29,"line_start":1,"line_end":1,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":0,"byte_end":31,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"use ring::digest::{Context, SHA256};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `PdfMetadata`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\domain\\entities\\mod.rs","byte_start":74,"byte_end":85,"line_start":4,"line_end":4,"column_start":37,"column_end":48,"is_primary":true,"text":[{"text":"pub use pdf_document::{PdfDocument, PdfMetadata, EncryptionParams};","highlight_start":37,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\mod.rs","byte_start":72,"byte_end":85,"line_start":4,"line_end":4,"column_start":35,"column_end":48,"is_primary":true,"text":[{"text":"pub use pdf_document::{PdfDocument, PdfMetadata, EncryptionParams};","highlight_start":35,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `PdfMetadata`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\mod.rs:4:37\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use pdf_document::{PdfDocument, PdfMetadata, EncryptionParams};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `EncryptionPreferences` and `Language`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\domain\\entities\\mod.rs","byte_start":130,"byte_end":151,"line_start":5,"line_end":5,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"pub use user_settings::{EncryptionPreferences, Language, Theme, UserSettings};","highlight_start":25,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\mod.rs","byte_start":153,"byte_end":161,"line_start":5,"line_end":5,"column_start":48,"column_end":56,"is_primary":true,"text":[{"text":"pub use user_settings::{EncryptionPreferences, Language, Theme, UserSettings};","highlight_start":48,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\mod.rs","byte_start":130,"byte_end":163,"line_start":5,"line_end":5,"column_start":25,"column_end":58,"is_primary":true,"text":[{"text":"pub use user_settings::{EncryptionPreferences, Language, Theme, UserSettings};","highlight_start":25,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `EncryptionPreferences` and `Language`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\mod.rs:5:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use user_settings::{EncryptionPreferences, Language, Theme, UserSett\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `pdf_repository::PdfRepository`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\domain\\repositories\\mod.rs","byte_start":54,"byte_end":83,"line_start":4,"line_end":4,"column_start":9,"column_end":38,"is_primary":true,"text":[{"text":"pub use pdf_repository::PdfRepository;","highlight_start":9,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\domain\\repositories\\mod.rs","byte_start":46,"byte_end":85,"line_start":4,"line_end":5,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use pdf_repository::PdfRepository;","highlight_start":1,"highlight_end":39},{"text":"pub use settings_repository::SettingsRepository;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `pdf_repository::PdfRepository`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\repositories\\mod.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use pdf_repository::PdfRepository;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `settings_repository::SettingsRepository`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\domain\\repositories\\mod.rs","byte_start":93,"byte_end":132,"line_start":5,"line_end":5,"column_start":9,"column_end":48,"is_primary":true,"text":[{"text":"pub use settings_repository::SettingsRepository;","highlight_start":9,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\domain\\repositories\\mod.rs","byte_start":85,"byte_end":134,"line_start":5,"line_end":5,"column_start":1,"column_end":50,"is_primary":true,"text":[{"text":"pub use settings_repository::SettingsRepository;","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `settings_repository::SettingsRepository`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\repositories\\mod.rs:5:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use settings_repository::SettingsRepository;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `decrypt_pdf` and `encrypt_pdf`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\infrastructure\\services\\mod.rs","byte_start":42,"byte_end":53,"line_start":3,"line_end":3,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"pub use encryption::{encrypt_pdf, decrypt_pdf};","highlight_start":22,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\infrastructure\\services\\mod.rs","byte_start":55,"byte_end":66,"line_start":3,"line_end":3,"column_start":35,"column_end":46,"is_primary":true,"text":[{"text":"pub use encryption::{encrypt_pdf, decrypt_pdf};","highlight_start":35,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\infrastructure\\services\\mod.rs","byte_start":21,"byte_end":69,"line_start":3,"line_end":3,"column_start":1,"column_end":49,"is_primary":true,"text":[{"text":"pub use encryption::{encrypt_pdf, decrypt_pdf};","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `decrypt_pdf` and `encrypt_pdf`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\mod.rs:3:22\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use encryption::{encrypt_pdf, decrypt_pdf};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `decrypt_pdf` and `encrypt_pdf`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\infrastructure\\mod.rs","byte_start":81,"byte_end":92,"line_start":5,"line_end":5,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"pub use services::encryption::{encrypt_pdf, decrypt_pdf};","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\infrastructure\\mod.rs","byte_start":94,"byte_end":105,"line_start":5,"line_end":5,"column_start":45,"column_end":56,"is_primary":true,"text":[{"text":"pub use services::encryption::{encrypt_pdf, decrypt_pdf};","highlight_start":45,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\infrastructure\\mod.rs","byte_start":50,"byte_end":108,"line_start":5,"line_end":6,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use services::encryption::{encrypt_pdf, decrypt_pdf};","highlight_start":1,"highlight_end":58},{"text":"pub use storage::local_storage::LocalStorage;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `decrypt_pdf` and `encrypt_pdf`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\mod.rs:5:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use services::encryption::{encrypt_pdf, decrypt_pdf};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `wasm_bindgen::JsCast`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":4,"byte_end":24,"line_start":1,"line_end":1,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use wasm_bindgen::JsCast;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use wasm_bindgen::JsCast;","highlight_start":1,"highlight_end":26},{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `wasm_bindgen::JsCast`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasm_bindgen::JsCast;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `window`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":59,"byte_end":65,"line_start":2,"line_end":2,"column_start":34,"column_end":40,"is_primary":true,"text":[{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":34,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":57,"byte_end":65,"line_start":2,"line_end":2,"column_start":32,"column_end":40,"is_primary":true,"text":[{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":32,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":39,"byte_end":40,"line_start":2,"line_end":2,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":65,"byte_end":66,"line_start":2,"line_end":2,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"use web_sys::{HtmlIframeElement, window};","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `window`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:2:34\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse web_sys::{HtmlIframeElement, window};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `EncryptionControlsProps`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":202,"byte_end":225,"line_start":10,"line_end":10,"column_start":51,"column_end":74,"is_primary":true,"text":[{"text":"pub use encryption_controls::{EncryptionControls, EncryptionControlsProps};","highlight_start":51,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":200,"byte_end":225,"line_start":10,"line_end":10,"column_start":49,"column_end":74,"is_primary":true,"text":[{"text":"pub use encryption_controls::{EncryptionControls, EncryptionControlsProps};","highlight_start":49,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":181,"byte_end":182,"line_start":10,"line_end":10,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"pub use encryption_controls::{EncryptionControls, EncryptionControlsProps};","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":225,"byte_end":226,"line_start":10,"line_end":10,"column_start":74,"column_end":75,"is_primary":true,"text":[{"text":"pub use encryption_controls::{EncryptionControls, EncryptionControlsProps};","highlight_start":74,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `EncryptionControlsProps`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:10:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m:{EncryptionControls, EncryptionControlsProps};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ErrorBoundaryProps` and `ErrorBoundary`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":253,"byte_end":266,"line_start":11,"line_end":11,"column_start":26,"column_end":39,"is_primary":true,"text":[{"text":"pub use error_boundary::{ErrorBoundary, ErrorBoundaryProps};","highlight_start":26,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":268,"byte_end":286,"line_start":11,"line_end":11,"column_start":41,"column_end":59,"is_primary":true,"text":[{"text":"pub use error_boundary::{ErrorBoundary, ErrorBoundaryProps};","highlight_start":41,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":228,"byte_end":289,"line_start":11,"line_end":12,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use error_boundary::{ErrorBoundary, ErrorBoundaryProps};","highlight_start":1,"highlight_end":61},{"text":"pub use file_upload::{FileUpload, FileUploadProps};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `ErrorBoundaryProps` and `ErrorBoundary`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:11:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use error_boundary::{ErrorBoundary, ErrorBoundaryProps};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `FileUploadProps`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":323,"byte_end":338,"line_start":12,"line_end":12,"column_start":35,"column_end":50,"is_primary":true,"text":[{"text":"pub use file_upload::{FileUpload, FileUploadProps};","highlight_start":35,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":321,"byte_end":338,"line_start":12,"line_end":12,"column_start":33,"column_end":50,"is_primary":true,"text":[{"text":"pub use file_upload::{FileUpload, FileUploadProps};","highlight_start":33,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":310,"byte_end":311,"line_start":12,"line_end":12,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"pub use file_upload::{FileUpload, FileUploadProps};","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":338,"byte_end":339,"line_start":12,"line_end":12,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"pub use file_upload::{FileUpload, FileUploadProps};","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `FileUploadProps`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:12:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use file_upload::{FileUpload, FileUploadProps};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `navigation::NavigationMenu`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":419,"byte_end":445,"line_start":14,"line_end":14,"column_start":9,"column_end":35,"is_primary":true,"text":[{"text":"pub use navigation::NavigationMenu;","highlight_start":9,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":411,"byte_end":447,"line_start":14,"line_end":15,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use navigation::NavigationMenu;","highlight_start":1,"highlight_end":36},{"text":"pub use pdf_preview::{PdfPreview, PdfPreviewProps};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `navigation::NavigationMenu`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:14:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use navigation::NavigationMenu;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `PdfPreviewProps`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":481,"byte_end":496,"line_start":15,"line_end":15,"column_start":35,"column_end":50,"is_primary":true,"text":[{"text":"pub use pdf_preview::{PdfPreview, PdfPreviewProps};","highlight_start":35,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":479,"byte_end":496,"line_start":15,"line_end":15,"column_start":33,"column_end":50,"is_primary":true,"text":[{"text":"pub use pdf_preview::{PdfPreview, PdfPreviewProps};","highlight_start":33,"highlight_end":50}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":468,"byte_end":469,"line_start":15,"line_end":15,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"pub use pdf_preview::{PdfPreview, PdfPreviewProps};","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":496,"byte_end":497,"line_start":15,"line_end":15,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"pub use pdf_preview::{PdfPreview, PdfPreviewProps};","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `PdfPreviewProps`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:15:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use pdf_preview::{PdfPreview, PdfPreviewProps};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ProcessingStatus`, `StatusIndicatorProps`, and `StatusIndicator`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":526,"byte_end":542,"line_start":16,"line_end":16,"column_start":28,"column_end":44,"is_primary":true,"text":[{"text":"pub use status_indicator::{ProcessingStatus, StatusIndicator, StatusIndicatorProps};","highlight_start":28,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":544,"byte_end":559,"line_start":16,"line_end":16,"column_start":46,"column_end":61,"is_primary":true,"text":[{"text":"pub use status_indicator::{ProcessingStatus, StatusIndicator, StatusIndicatorProps};","highlight_start":46,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":561,"byte_end":581,"line_start":16,"line_end":16,"column_start":63,"column_end":83,"is_primary":true,"text":[{"text":"pub use status_indicator::{ProcessingStatus, StatusIndicator, StatusIndicatorProps};","highlight_start":63,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":499,"byte_end":584,"line_start":16,"line_end":17,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use status_indicator::{ProcessingStatus, StatusIndicator, StatusIndicatorProps};","highlight_start":1,"highlight_end":85},{"text":"pub use toast::{Toast, ToastComponent, ToastContainer, ToastType};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `ProcessingStatus`, `StatusIndicatorProps`, and `StatusIndicator`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:16:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mtor::{ProcessingStatus, StatusIndicator, StatusIndicatorProps};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `ToastComponent`, `ToastContainer`, `ToastType`, and `Toast`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":600,"byte_end":605,"line_start":17,"line_end":17,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"pub use toast::{Toast, ToastComponent, ToastContainer, ToastType};","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":607,"byte_end":621,"line_start":17,"line_end":17,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"pub use toast::{Toast, ToastComponent, ToastContainer, ToastType};","highlight_start":24,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":623,"byte_end":637,"line_start":17,"line_end":17,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"pub use toast::{Toast, ToastComponent, ToastContainer, ToastType};","highlight_start":40,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\mod.rs","byte_start":639,"byte_end":648,"line_start":17,"line_end":17,"column_start":56,"column_end":65,"is_primary":true,"text":[{"text":"pub use toast::{Toast, ToastComponent, ToastContainer, ToastType};","highlight_start":56,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\mod.rs","byte_start":584,"byte_end":651,"line_start":17,"line_end":17,"column_start":1,"column_end":68,"is_primary":true,"text":[{"text":"pub use toast::{Toast, ToastComponent, ToastContainer, ToastType};","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `ToastComponent`, `ToastContainer`, `ToastType`, and `Toast`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\mod.rs:17:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use toast::{Toast, ToastComponent, ToastContainer, ToastType};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `app::App`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\mod.rs","byte_start":74,"byte_end":82,"line_start":6,"line_end":6,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"pub use app::App;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\mod.rs","byte_start":66,"byte_end":84,"line_start":6,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub use app::App;","highlight_start":1,"highlight_end":18},{"text":"pub use context::LoadingProvider;","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `app::App`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\mod.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub use app::App;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated function `base64::encode`: Use Engine::encode","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":1164,"byte_end":1170,"line_start":39,"line_end":39,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"                let content = base64::encode(&document.content());","highlight_start":39,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: use of deprecated function `base64::encode`: Use Engine::encode\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:39:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let content = base64::encode(&document.content());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `get_content` found for reference `&PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":1236,"byte_end":1247,"line_start":38,"line_end":38,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"    let mut in_out = pdf.get_content().to_vec();","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `content` with a similar name","code":null,"level":"help","spans":[{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":1236,"byte_end":1247,"line_start":38,"line_end":38,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"    let mut in_out = pdf.get_content().to_vec();","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":"content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_content` found for reference `&PdfDocument` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:38:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut in_out = pdf.get_content().to_vec();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `content` with a similar name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut in_out = pdf.\u001b[0m\u001b[0m\u001b[38;5;10mcontent\u001b[0m\u001b[0m().to_vec();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `set_content` found for struct `PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"method `set_content` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":1507,"byte_end":1518,"line_start":45,"line_end":45,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    encrypted_pdf.set_content(in_out);","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `content` with a similar name, but with different arguments","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":1408,"byte_end":1438,"line_start":63,"line_end":63,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn content(&self) -> &[u8] {","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `set_content` found for struct `PdfDocument` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:45:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    encrypted_pdf.set_content(in_out);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `set_content` not found for this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `content` with a similar name, but with different arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:63:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn content(&self) -> &[u8] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `set_encryption_params` found for struct `PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"method `set_encryption_params` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":1774,"byte_end":1795,"line_start":55,"line_end":55,"column_start":19,"column_end":40,"is_primary":true,"text":[{"text":"    encrypted_pdf.set_encryption_params(params);","highlight_start":19,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `get_encryption_params` with a similar name, but with different arguments","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":1545,"byte_end":1601,"line_start":71,"line_end":71,"column_start":5,"column_end":61,"is_primary":true,"text":[{"text":"    pub fn get_encryption_params(&self) -> &EncryptionParams {","highlight_start":5,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `set_encryption_params` found for struct `PdfDocument` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:55:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    encrypted_pdf.set_encryption_params(params);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `set_encryption_params` not found for this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `get_encryption_params` with a similar name, but with different arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:71:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_encryption_params(&self) -> &EncryptionParams {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `get_content` found for reference `&PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":2872,"byte_end":2883,"line_start":89,"line_end":89,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"    let mut in_out = pdf.get_content().to_vec();","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `content` with a similar name","code":null,"level":"help","spans":[{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":2872,"byte_end":2883,"line_start":89,"line_end":89,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"    let mut in_out = pdf.get_content().to_vec();","highlight_start":26,"highlight_end":37}],"label":null,"suggested_replacement":"content","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `get_content` found for reference `&PdfDocument` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:89:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut in_out = pdf.get_content().to_vec();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `content` with a similar name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut in_out = pdf.\u001b[0m\u001b[0m\u001b[38;5;10mcontent\u001b[0m\u001b[0m().to_vec();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `set_content` found for struct `PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"method `set_content` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\infrastructure\\services\\encryption.rs","byte_start":3250,"byte_end":3261,"line_start":99,"line_end":99,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    decrypted_pdf.set_content(in_out);","highlight_start":19,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `content` with a similar name, but with different arguments","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":1408,"byte_end":1438,"line_start":63,"line_end":63,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn content(&self) -> &[u8] {","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `set_content` found for struct `PdfDocument` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\infrastructure\\services\\encryption.rs:99:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    decrypted_pdf.set_content(in_out);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `set_content` not found for this struct\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `content` with a similar name, but with different arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:63:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn content(&self) -> &[u8] {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `AssertAllProps: AllPropsFor<DecryptPagePropsBuilder, (_,)>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\app.rs","byte_start":2913,"byte_end":2924,"line_start":74,"line_end":74,"column_start":36,"column_end":47,"is_primary":true,"text":[{"text":"        Route::Decrypt => html! { <DecryptPage /> },","highlight_start":36,"highlight_end":47}],"label":"the trait `HasProp<_DecryptPageProps::i18n, _>` is not implemented for `AssertAllProps`, which is required by `AssertAllProps: AllPropsFor<DecryptPagePropsBuilder, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\app.rs","byte_start":2904,"byte_end":2929,"line_start":74,"line_end":74,"column_start":27,"column_end":52,"is_primary":false,"text":[{"text":"        Route::Decrypt => html! { <DecryptPage /> },","highlight_start":27,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2853,"byte_end":2890,"line_start":114,"line_end":114,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[proc_macro_error::proc_macro_error]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `HasProp<P, How>`:\n  `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\nand 58 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `CheckDecryptPagePropsAll<AssertAllProps>` to implement `HasAllProps<DecryptPageProps, (_,)>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":401,"byte_end":411,"line_start":12,"line_end":12,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":401,"byte_end":411,"line_start":12,"line_end":12,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":401,"byte_end":411,"line_start":12,"line_end":12,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":401,"byte_end":411,"line_start":12,"line_end":12,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `AssertAllProps` to implement `AllPropsFor<DecryptPagePropsBuilder, (_,)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3548,"byte_end":3553,"line_start":74,"line_end":74,"column_start":16,"column_end":21,"is_primary":false,"text":[{"text":"        pub fn build<How>(self) -> B::Output","highlight_start":16,"highlight_end":21}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3611,"byte_end":3630,"line_start":76,"line_end":76,"column_start":20,"column_end":39,"is_primary":true,"text":[{"text":"            Token: AllPropsFor<B, How>,","highlight_start":20,"highlight_end":39}],"label":"required by this bound in `PreBuild::<Token, B>::build`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `AssertAllProps: AllPropsFor<DecryptPagePropsBuilder, (_,)>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\app.rs:74:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Route::Decrypt => html! { <DecryptPage /> },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `HasProp<_DecryptPageProps::i18n, _>` is not implemented for `AssertAllProps`, which is required by `AssertAllProps: AllPropsFor<DecryptPagePropsBuilder, _>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `HasProp<P, How>`:\u001b[0m\n\u001b[0m             `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m             `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m           and 58 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `CheckDecryptPagePropsAll<AssertAllProps>` to implement `HasAllProps<DecryptPageProps, (_,)>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:12:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `AssertAllProps` to implement `AllPropsFor<DecryptPagePropsBuilder, (_,)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs:76:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn build<How>(self) -> B::Output\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Token: AllPropsFor<B, How>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `html` which comes from the expansion of the derive macro `Properties` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binary operation `==` cannot be applied to type `PdfDocument`","code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":455,"byte_end":480,"line_start":20,"line_end":20,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"    pub document: PdfDocument,","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":402,"byte_end":411,"line_start":18,"line_end":18,"column_start":22,"column_end":31,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":22,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(PartialEq)]","def_site_span":{"file_name":"/rustc/90b35a6239c3d8bdabc530a6a0816f7ff89a0aaf\\library\\core\\src\\cmp.rs","byte_start":10027,"byte_end":10046,"line_start":271,"line_end":271,"column_start":1,"column_end":20,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an implementation of `PartialEq` might be missing for `PdfDocument`","code":null,"level":"note","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"must implement `PartialEq`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider annotating `PdfDocument` with `#[derive(PartialEq)]`","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":170,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#[derive(PartialEq)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0369]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: binary operation `==` cannot be applied to type `PdfDocument`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct EncryptionControlsProps {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub document: PdfDocument,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: an implementation of `PartialEq` might be missing for `PdfDocument`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mmust implement `PartialEq`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider annotating `PdfDocument` with `#[derive(PartialEq)]`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ #[derive(PartialEq)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":2390,"byte_end":2399,"line_start":80,"line_end":80,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"                    if let Some(doc) = &ctx.props().document {","highlight_start":28,"highlight_end":37}],"label":"expected `PdfDocument`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":2402,"byte_end":2423,"line_start":80,"line_end":80,"column_start":40,"column_end":61,"is_primary":false,"text":[{"text":"                    if let Some(doc) = &ctx.props().document {","highlight_start":40,"highlight_end":61}],"label":"this expression has type `&PdfDocument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `PdfDocument`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:80:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(doc) = &ctx.props().document {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis expression has type `&PdfDocument`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `PdfDocument`, found `Option<_>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mPdfDocument\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<_>\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":7616,"byte_end":7625,"line_start":184,"line_end":184,"column_start":28,"column_end":37,"is_primary":true,"text":[{"text":"                    if let Some(doc) = &ctx.props().document {","highlight_start":28,"highlight_end":37}],"label":"expected `PdfDocument`, found `Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":7628,"byte_end":7649,"line_start":184,"line_end":184,"column_start":40,"column_end":61,"is_primary":false,"text":[{"text":"                    if let Some(doc) = &ctx.props().document {","highlight_start":40,"highlight_end":61}],"label":"this expression has type `&PdfDocument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `PdfDocument`\n     found enum `std::option::Option<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:184:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if let Some(doc) = &ctx.props().document {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis expression has type `&PdfDocument`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `PdfDocument`, found `Option<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mPdfDocument\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                 found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mstd::option::Option<_>\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `bool: IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":8027,"byte_end":8051,"line_start":190,"line_end":190,"column_start":48,"column_end":72,"is_primary":true,"text":[{"text":"                                aria-disabled={self.password.is_empty()}","highlight_start":48,"highlight_end":72}],"label":"the trait `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not implemented for `bool`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":8027,"byte_end":8031,"line_start":190,"line_end":190,"column_start":48,"column_end":52,"is_primary":false,"text":[{"text":"                                aria-disabled={self.password.is_empty()}","highlight_start":48,"highlight_end":52}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `IntoPropValue<T>`:\n  `&'static [(K, V)]` implements `IntoPropValue<implicit_clone::unsync::map::IMap<K, V>>`\n  `&'static [T]` implements `IntoPropValue<implicit_clone::unsync::array::IArray<T>>`\n  `&'static str` implements `IntoPropValue<implicit_clone::unsync::string::IString>`\n  `&'static str` implements `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>`\n  `&'static str` implements `IntoPropValue<std::option::Option<std::string::String>>`\n  `&'static str` implements `IntoPropValue<std::string::String>`\n  `&'static str` implements `IntoPropValue<yew::Classes>`\n  `&T` implements `IntoPropValue<T>`\nand 26 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider removing this method call, as the receiver has type `std::string::String` and `std::string::String: IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` trivially holds","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":8040,"byte_end":8051,"line_start":190,"line_end":190,"column_start":61,"column_end":72,"is_primary":true,"text":[{"text":"                                aria-disabled={self.password.is_empty()}","highlight_start":61,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `bool: IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:190:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   aria-disabled={self.password.is_empty()}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not implemented for `bool`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `IntoPropValue<T>`:\u001b[0m\n\u001b[0m              `&'static [(K, V)]` implements `IntoPropValue<implicit_clone::unsync::map::IMap<K, V>>`\u001b[0m\n\u001b[0m              `&'static [T]` implements `IntoPropValue<implicit_clone::unsync::array::IArray<T>>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<implicit_clone::unsync::string::IString>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<std::option::Option<std::string::String>>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<std::string::String>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<yew::Classes>`\u001b[0m\n\u001b[0m              `&T` implements `IntoPropValue<T>`\u001b[0m\n\u001b[0m            and 26 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider removing this method call, as the receiver has type `std::string::String` and `std::string::String: IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` trivially holds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                                aria-disabled={self.password\u001b[0m\u001b[0m\u001b[38;5;9m.is_empty()\u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                                aria-disabled={self.password}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `bool: IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":8594,"byte_end":8660,"line_start":199,"line_end":199,"column_start":48,"column_end":114,"is_primary":true,"text":[{"text":"                                aria-disabled={self.password.is_empty() || self.password != self.confirm_password}","highlight_start":48,"highlight_end":114}],"label":"the trait `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not implemented for `bool`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":8594,"byte_end":8598,"line_start":199,"line_end":199,"column_start":48,"column_end":52,"is_primary":false,"text":[{"text":"                                aria-disabled={self.password.is_empty() || self.password != self.confirm_password}","highlight_start":48,"highlight_end":52}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `IntoPropValue<T>`:\n  `&'static [(K, V)]` implements `IntoPropValue<implicit_clone::unsync::map::IMap<K, V>>`\n  `&'static [T]` implements `IntoPropValue<implicit_clone::unsync::array::IArray<T>>`\n  `&'static str` implements `IntoPropValue<implicit_clone::unsync::string::IString>`\n  `&'static str` implements `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>`\n  `&'static str` implements `IntoPropValue<std::option::Option<std::string::String>>`\n  `&'static str` implements `IntoPropValue<std::string::String>`\n  `&'static str` implements `IntoPropValue<yew::Classes>`\n  `&T` implements `IntoPropValue<T>`\nand 26 others","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `bool: IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:199:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0md={self.password.is_empty() || self.password != self.confirm_password}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>` is not implemented for `bool`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `IntoPropValue<T>`:\u001b[0m\n\u001b[0m              `&'static [(K, V)]` implements `IntoPropValue<implicit_clone::unsync::map::IMap<K, V>>`\u001b[0m\n\u001b[0m              `&'static [T]` implements `IntoPropValue<implicit_clone::unsync::array::IArray<T>>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<implicit_clone::unsync::string::IString>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<std::option::Option<implicit_clone::unsync::string::IString>>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<std::option::Option<std::string::String>>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<std::string::String>`\u001b[0m\n\u001b[0m              `&'static str` implements `IntoPropValue<yew::Classes>`\u001b[0m\n\u001b[0m              `&T` implements `IntoPropValue<T>`\u001b[0m\n\u001b[0m            and 26 others\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `props` exists for reference `&Context<ErrorBoundary>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":1221,"byte_end":1226,"line_start":49,"line_end":49,"column_start":42,"column_end":47,"is_primary":true,"text":[{"text":"            if let Some(fallback) = &ctx.props().fallback {","highlight_start":42,"highlight_end":47}],"label":"private field, not a method","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":242,"byte_end":266,"line_start":12,"line_end":12,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct ErrorBoundary {","highlight_start":1,"highlight_end":25}],"label":"doesn't satisfy `ErrorBoundary: Sized`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`{type error}: Sized`\nwhich is required by `ErrorBoundary: Sized`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `props` exists for reference `&Context<ErrorBoundary>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\error_boundary.rs:49:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ErrorBoundary {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `ErrorBoundary: Sized`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(fallback) = &ctx.props().fallback {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate field, not a method\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `{type error}: Sized`\u001b[0m\n\u001b[0m           which is required by `ErrorBoundary: Sized`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `link` exists for reference `&Context<ErrorBoundary>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":2053,"byte_end":2057,"line_start":63,"line_end":63,"column_start":50,"column_end":54,"is_primary":true,"text":[{"text":"                                    onclick={ctx.link().callback(|_| ErrorBoundaryMsg::ClearError)}","highlight_start":50,"highlight_end":54}],"label":"method cannot be called on `&Context<ErrorBoundary>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":242,"byte_end":266,"line_start":12,"line_end":12,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct ErrorBoundary {","highlight_start":1,"highlight_end":25}],"label":"doesn't satisfy `ErrorBoundary: Sized`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`{type error}: Sized`\nwhich is required by `ErrorBoundary: Sized`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `link` exists for reference `&Context<ErrorBoundary>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\error_boundary.rs:63:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ErrorBoundary {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `ErrorBoundary: Sized`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    onclick={ctx.link().callback(|_| Er\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `&Context<ErrorBoundary>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `{type error}: Sized`\u001b[0m\n\u001b[0m           which is required by `ErrorBoundary: Sized`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `props` exists for reference `&Context<ErrorBoundary>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":2552,"byte_end":2557,"line_start":75,"line_end":75,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                <>{ for ctx.props().children.iter() }</>","highlight_start":29,"highlight_end":34}],"label":"private field, not a method","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":242,"byte_end":266,"line_start":12,"line_end":12,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"pub struct ErrorBoundary {","highlight_start":1,"highlight_end":25}],"label":"doesn't satisfy `ErrorBoundary: Sized`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`{type error}: Sized`\nwhich is required by `ErrorBoundary: Sized`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the method `props` exists for reference `&Context<ErrorBoundary>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\error_boundary.rs:75:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct ErrorBoundary {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mdoesn't satisfy `ErrorBoundary: Sized`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <>{ for ctx.props().children.iter() }</>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate field, not a method\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m           `{type error}: Sized`\u001b[0m\n\u001b[0m           which is required by `ErrorBoundary: Sized`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"this function takes 2 arguments but 3 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4470,"byte_end":4474,"line_start":122,"line_end":122,"column_start":25,"column_end":29,"is_primary":false,"text":[{"text":"                        None,","highlight_start":25,"highlight_end":29}],"label":"unexpected argument #3 of type `std::option::Option<_>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4387,"byte_end":4398,"line_start":120,"line_end":120,"column_start":25,"column_end":36,"is_primary":false,"text":[{"text":"                        file.name(),","highlight_start":25,"highlight_end":36}],"label":"expected `Vec<u8>`, found `std::string::String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4424,"byte_end":4444,"line_start":121,"line_end":121,"column_start":25,"column_end":45,"is_primary":false,"text":[{"text":"                        content.into_bytes(),","highlight_start":25,"highlight_end":45}],"label":"expected `std::string::String`, found `Vec<u8>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4345,"byte_end":4361,"line_start":119,"line_end":119,"column_start":31,"column_end":47,"is_primary":true,"text":[{"text":"                    let doc = PdfDocument::new(","highlight_start":31,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":692,"byte_end":708,"line_start":31,"line_end":31,"column_start":16,"column_end":32,"is_primary":false,"text":[{"text":"    pub fn new(content: Vec<u8>, name: String) -> Self {","highlight_start":16,"highlight_end":32}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":710,"byte_end":722,"line_start":31,"line_end":31,"column_start":34,"column_end":46,"is_primary":false,"text":[{"text":"    pub fn new(content: Vec<u8>, name: String) -> Self {","highlight_start":34,"highlight_end":46}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":688,"byte_end":691,"line_start":31,"line_end":31,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(content: Vec<u8>, name: String) -> Self {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"did you mean","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4361,"byte_end":4497,"line_start":119,"line_end":123,"column_start":47,"column_end":22,"is_primary":true,"text":[{"text":"                    let doc = PdfDocument::new(","highlight_start":47,"highlight_end":48},{"text":"                        file.name(),","highlight_start":1,"highlight_end":37},{"text":"                        content.into_bytes(),","highlight_start":1,"highlight_end":46},{"text":"                        None,","highlight_start":1,"highlight_end":30},{"text":"                    );","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"(content.into_bytes(), file.name())","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 2 arguments but 3 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:119:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    let doc = PdfDocument::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        file.name(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `Vec<u8>`, found `std::string::String`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        content.into_bytes(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `std::string::String`, found `Vec<u8>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        None,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument #3 of type `std::option::Option<_>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:31:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(content: Vec<u8>, name: String) -> Self {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: did you mean\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    let doc = PdfDocument::new\u001b[0m\u001b[0m\u001b[38;5;10m(content.into_bytes(), file.name())\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `System` found for enum `Theme` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\navigation.rs","byte_start":646,"byte_end":652,"line_start":19,"line_end":19,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"                Theme::System => Theme::Light,","highlight_start":24,"highlight_end":30}],"label":"variant or associated item not found in `Theme`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\user_settings.rs","byte_start":242,"byte_end":256,"line_start":12,"line_end":12,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"pub enum Theme {","highlight_start":1,"highlight_end":15}],"label":"variant or associated item `System` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `System` found for enum `Theme` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\navigation.rs:19:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Theme::System => Theme::Light,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Theme`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\user_settings.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Theme {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `System` not found for this enum\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `System` found for enum `Theme` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\navigation.rs","byte_start":615,"byte_end":621,"line_start":18,"line_end":18,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"                Theme::Dark => Theme::System,","highlight_start":39,"highlight_end":45}],"label":"variant or associated item not found in `Theme`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\user_settings.rs","byte_start":242,"byte_end":256,"line_start":12,"line_end":12,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"pub enum Theme {","highlight_start":1,"highlight_end":15}],"label":"variant or associated item `System` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `System` found for enum `Theme` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\navigation.rs:18:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Theme::Dark => Theme::System,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Theme`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\user_settings.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Theme {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `System` not found for this enum\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `System` found for enum `Theme` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\navigation.rs","byte_start":1200,"byte_end":1206,"line_start":40,"line_end":40,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"        Theme::System => \"⚙️\",","highlight_start":16,"highlight_end":22}],"label":"variant or associated item not found in `Theme`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\user_settings.rs","byte_start":242,"byte_end":256,"line_start":12,"line_end":12,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"pub enum Theme {","highlight_start":1,"highlight_end":15}],"label":"variant or associated item `System` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `System` found for enum `Theme` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\navigation.rs:40:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Theme::System => \"⚙️\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Theme`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\user_settings.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Theme {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `System` not found for this enum\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"binary operation `==` cannot be applied to type `PdfDocument`","code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":288,"byte_end":313,"line_start":10,"line_end":10,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"    pub document: PdfDocument,","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":243,"byte_end":252,"line_start":8,"line_end":8,"column_start":22,"column_end":31,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":22,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(PartialEq)]","def_site_span":{"file_name":"/rustc/90b35a6239c3d8bdabc530a6a0816f7ff89a0aaf\\library\\core\\src\\cmp.rs","byte_start":10027,"byte_end":10046,"line_start":271,"line_end":271,"column_start":1,"column_end":20,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an implementation of `PartialEq` might be missing for `PdfDocument`","code":null,"level":"note","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"must implement `PartialEq`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider annotating `PdfDocument` with `#[derive(PartialEq)]`","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":170,"line_start":7,"line_end":7,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#[derive(PartialEq)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0369]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: binary operation `==` cannot be applied to type `PdfDocument`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfPreviewProps {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub document: PdfDocument,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: an implementation of `PartialEq` might be missing for `PdfDocument`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mmust implement `PartialEq`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider annotating `PdfDocument` with `#[derive(PartialEq)]`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ #[derive(PartialEq)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't compare `PdfDocument` with `PdfDocument`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":1705,"byte_end":1727,"line_start":53,"line_end":53,"column_start":10,"column_end":32,"is_primary":true,"text":[{"text":"        (props.document.clone(), iframe_ref.clone(), *zoom),","highlight_start":10,"highlight_end":32}],"label":"no implementation for `PdfDocument == PdfDocument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":934,"byte_end":954,"line_start":35,"line_end":35,"column_start":5,"column_end":25,"is_primary":false,"text":[{"text":"    use_effect_with_deps(","highlight_start":5,"highlight_end":25}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `PartialEq` is not implemented for `PdfDocument`, which is required by `(PdfDocument, NodeRef, {integer}): PartialEq`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `(PdfDocument, NodeRef, {integer})` to implement `PartialEq`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::use_effect_with_deps`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs","byte_start":6478,"byte_end":6498,"line_start":265,"line_end":265,"column_start":8,"column_end":28,"is_primary":false,"text":[{"text":"pub fn use_effect_with_deps<T, F, D>(f: F, deps: T)","highlight_start":8,"highlight_end":28}],"label":"required by a bound in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs","byte_start":6536,"byte_end":6545,"line_start":267,"line_end":267,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: PartialEq + 'static,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `use_effect_with_deps`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: can't compare `PdfDocument` with `PdfDocument`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:53:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use_effect_with_deps(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (props.document.clone(), iframe_ref.clone(), *zoom),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `PdfDocument == PdfDocument`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `PartialEq` is not implemented for `PdfDocument`, which is required by `(PdfDocument, NodeRef, {integer}): PartialEq`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `(PdfDocument, NodeRef, {integer})` to implement `PartialEq`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::use_effect_with_deps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs:267:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn use_effect_with_deps<T, F, D>(f: F, deps: T)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    T: PartialEq + 'static,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `use_effect_with_deps`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't compare `PdfDocument` with `PdfDocument`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":934,"byte_end":1762,"line_start":35,"line_end":54,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    use_effect_with_deps(","highlight_start":5,"highlight_end":26},{"text":"        move |(document, iframe_ref, zoom)| {","highlight_start":1,"highlight_end":46},{"text":"            if let Some(iframe) = iframe_ref.cast::<HtmlIframeElement>() {","highlight_start":1,"highlight_end":75},{"text":"                // Convert PDF content to base64","highlight_start":1,"highlight_end":49},{"text":"                let content = base64::encode(&document.content());","highlight_start":1,"highlight_end":67},{"text":"                let url = format!(\"data:application/pdf;base64,{}\", content);","highlight_start":1,"highlight_end":78},{"text":"                ","highlight_start":1,"highlight_end":17},{"text":"                // Set iframe src to PDF content","highlight_start":1,"highlight_end":49},{"text":"                iframe.set_src(&url);","highlight_start":1,"highlight_end":38},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Apply zoom level","highlight_start":1,"highlight_end":36},{"text":"                if let Ok(style) = iframe.style() {","highlight_start":1,"highlight_end":52},{"text":"                    let _ = style.set_property(\"transform\", &format!(\"scale({}%)\", zoom));","highlight_start":1,"highlight_end":91},{"text":"                    let _ = style.set_property(\"transform-origin\", \"top left\");","highlight_start":1,"highlight_end":80},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            || ()","highlight_start":1,"highlight_end":18},{"text":"        },","highlight_start":1,"highlight_end":11},{"text":"        (props.document.clone(), iframe_ref.clone(), *zoom),","highlight_start":1,"highlight_end":61},{"text":"    );","highlight_start":1,"highlight_end":6}],"label":"no implementation for `PdfDocument == PdfDocument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `PartialEq` is not implemented for `PdfDocument`, which is required by `(PdfDocument, NodeRef, {integer}): PartialEq`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `(PdfDocument, NodeRef, {integer})` to implement `PartialEq`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::use_effect_with_deps`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs","byte_start":6478,"byte_end":6498,"line_start":265,"line_end":265,"column_start":8,"column_end":28,"is_primary":false,"text":[{"text":"pub fn use_effect_with_deps<T, F, D>(f: F, deps: T)","highlight_start":8,"highlight_end":28}],"label":"required by a bound in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs","byte_start":6536,"byte_end":6545,"line_start":267,"line_end":267,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: PartialEq + 'static,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `use_effect_with_deps`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: can't compare `PdfDocument` with `PdfDocument`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:35:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use_effect_with_deps(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        move |(document, iframe_ref, zoom)| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Some(iframe) = iframe_ref.cast::<HtmlIframeElemen\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                // Convert PDF content to base64\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (props.document.clone(), iframe_ref.clone(), *zoom),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `PdfDocument == PdfDocument`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `PartialEq` is not implemented for `PdfDocument`, which is required by `(PdfDocument, NodeRef, {integer}): PartialEq`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `(PdfDocument, NodeRef, {integer})` to implement `PartialEq`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::use_effect_with_deps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs:267:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn use_effect_with_deps<T, F, D>(f: F, deps: T)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    T: PartialEq + 'static,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `use_effect_with_deps`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"can't compare `PdfDocument` with `PdfDocument`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":934,"byte_end":954,"line_start":35,"line_end":35,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    use_effect_with_deps(","highlight_start":5,"highlight_end":25}],"label":"no implementation for `PdfDocument == PdfDocument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `PartialEq` is not implemented for `PdfDocument`, which is required by `(PdfDocument, NodeRef, {integer}): PartialEq`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `(PdfDocument, NodeRef, {integer})` to implement `PartialEq`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::use_effect_with_deps`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs","byte_start":6478,"byte_end":6498,"line_start":265,"line_end":265,"column_start":8,"column_end":28,"is_primary":false,"text":[{"text":"pub fn use_effect_with_deps<T, F, D>(f: F, deps: T)","highlight_start":8,"highlight_end":28}],"label":"required by a bound in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs","byte_start":6536,"byte_end":6545,"line_start":267,"line_end":267,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    T: PartialEq + 'static,","highlight_start":8,"highlight_end":17}],"label":"required by this bound in `use_effect_with_deps`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: can't compare `PdfDocument` with `PdfDocument`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:35:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use_effect_with_deps(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `PdfDocument == PdfDocument`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `PartialEq` is not implemented for `PdfDocument`, which is required by `(PdfDocument, NodeRef, {integer}): PartialEq`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `(PdfDocument, NodeRef, {integer})` to implement `PartialEq`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::use_effect_with_deps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\functional\\hooks\\use_effect.rs:267:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn use_effect_with_deps<T, F, D>(f: F, deps: T)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    T: PartialEq + 'static,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `use_effect_with_deps`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `name` found for struct `PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":4407,"byte_end":4411,"line_start":101,"line_end":101,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"                            props.document.name()","highlight_start":44,"highlight_end":48}],"label":"method not found in `PdfDocument`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"method `name` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `name`, perhaps you need to implement it:\ncandidate #1: `globalcache::CacheControl`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `name` found for struct `PdfDocument` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:101:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   props.document.name()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `PdfDocument`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `name` not found for this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is implemented and in scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following trait defines an item `name`, perhaps you need to implement it:\u001b[0m\n\u001b[0m            candidate #1: `globalcache::CacheControl`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `size` found for struct `PdfDocument` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":4721,"byte_end":4725,"line_start":107,"line_end":107,"column_start":44,"column_end":48,"is_primary":true,"text":[{"text":"                            props.document.size() as f64 / 1024.0","highlight_start":44,"highlight_end":48}],"label":"private field, not a method","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":170,"byte_end":192,"line_start":7,"line_end":7,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct PdfDocument {","highlight_start":1,"highlight_end":23}],"label":"method `size` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `size`, perhaps you need to implement one of them:\ncandidate #1: `globalcache::ValueSize`\ncandidate #2: `pdf::any::AnyObject`\ncandidate #3: `std::sys::pal::windows::api::SetFileInformation`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `size` found for struct `PdfDocument` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:107:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m107\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   props.document.size() as f64 / 1024.0\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate field, not a method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:7:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PdfDocument {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `size` not found for this struct\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is implemented and in scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following traits define an item `size`, perhaps you need to implement one of them:\u001b[0m\n\u001b[0m            candidate #1: `globalcache::ValueSize`\u001b[0m\n\u001b[0m            candidate #2: `pdf::any::AnyObject`\u001b[0m\n\u001b[0m            candidate #3: `std::sys::pal::windows::api::SetFileInformation`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `AssertAllProps: HasProp<_EncryptionControlsProps::i18n, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":4246,"byte_end":4264,"line_start":109,"line_end":109,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"                                <EncryptionControls","highlight_start":34,"highlight_end":52}],"label":"the trait `HasProp<_EncryptionControlsProps::i18n, _>` is not implemented for `AssertAllProps`, which is required by `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>: AllPropsFor<EncryptionControlsPropsBuilder, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":2843,"byte_end":4821,"line_start":83,"line_end":124,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        html! {","highlight_start":9,"highlight_end":16},{"text":"            <div class=\"container mx-auto px-4 py-8\">","highlight_start":1,"highlight_end":54},{"text":"                <h1 class=\"text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white\">","highlight_start":1,"highlight_end":95},{"text":"                    {\"Encrypt PDF\"}","highlight_start":1,"highlight_end":36},{"text":"                </h1>","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                if let Some(error) = &self.error {","highlight_start":1,"highlight_end":51},{"text":"                    <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">","highlight_start":1,"highlight_end":125},{"text":"                        <span class=\"block sm:inline\">{error}</span>","highlight_start":1,"highlight_end":69},{"text":"                        <button ","highlight_start":1,"highlight_end":33},{"text":"                            class=\"absolute top-0 bottom-0 right-0 px-4 py-3\"","highlight_start":1,"highlight_end":78},{"text":"                            onclick={ctx.link().callback(|_| EncryptMsg::ClearError)}","highlight_start":1,"highlight_end":86},{"text":"                        >","highlight_start":1,"highlight_end":26},{"text":"                            <span class=\"sr-only\">{\"Close\"}</span>","highlight_start":1,"highlight_end":67},{"text":"                            <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">","highlight_start":1,"highlight_end":104},{"text":"                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />","highlight_start":1,"highlight_end":130},{"text":"                            </svg>","highlight_start":1,"highlight_end":35},{"text":"                        </button>","highlight_start":1,"highlight_end":34},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">","highlight_start":1,"highlight_end":68},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        <FileUpload on_file_selected={onfile} />","highlight_start":1,"highlight_end":65},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <div class=\"mt-8\">","highlight_start":1,"highlight_end":47},{"text":"                                <EncryptionControls","highlight_start":1,"highlight_end":52},{"text":"                                    document={doc.clone()}","highlight_start":1,"highlight_end":59},{"text":"                                    on_encrypt={onencrypt}","highlight_start":1,"highlight_end":59},{"text":"                                    on_reset={onreset}","highlight_start":1,"highlight_end":55},{"text":"                                />","highlight_start":1,"highlight_end":35},{"text":"                            </div>","highlight_start":1,"highlight_end":35},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <PdfPreview document={doc.clone()} />","highlight_start":1,"highlight_end":66},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                </div>","highlight_start":1,"highlight_end":23},{"text":"            </div>","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2853,"byte_end":2890,"line_start":114,"line_end":114,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[proc_macro_error::proc_macro_error]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `HasProp<P, How>`:\n  `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\nand 58 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropsdocument<AssertAllProps>` to implement `HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"2 redundant requirements hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `CheckEncryptionControlsPropsAll<HasEncryptionControlsPropson_reset<...>>` to implement `HasAllProps<EncryptionControlsProps, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `AllPropsFor<EncryptionControlsPropsBuilder, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3548,"byte_end":3553,"line_start":74,"line_end":74,"column_start":16,"column_end":21,"is_primary":false,"text":[{"text":"        pub fn build<How>(self) -> B::Output","highlight_start":16,"highlight_end":21}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3611,"byte_end":3630,"line_start":76,"line_end":76,"column_start":20,"column_end":39,"is_primary":true,"text":[{"text":"            Token: AllPropsFor<B, How>,","highlight_start":20,"highlight_end":39}],"label":"required by this bound in `PreBuild::<Token, B>::build`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-12768932897135940167.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `AssertAllProps: HasProp<_EncryptionControlsProps::i18n, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\encrypt.rs:109:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   <EncryptionControls\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `HasProp<_EncryptionControlsProps::i18n, _>` is not implemented for `AssertAllProps`, which is required by `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>: AllPropsFor<EncryptionControlsPropsBuilder, _>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `HasProp<P, How>`:\u001b[0m\n\u001b[0m              `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m            and 58 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropsdocument<AssertAllProps>` to implement `HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: 2 redundant requirements hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `CheckEncryptionControlsPropsAll<HasEncryptionControlsPropson_reset<...>>` to implement `HasAllProps<EncryptionControlsProps, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `AllPropsFor<EncryptionControlsPropsBuilder, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs:76:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn build<How>(self) -> B::Output\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Token: AllPropsFor<B, How>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-12768932897135940167.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `html` which comes from the expansion of the derive macro `Properties` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `AssertAllProps: HasProp<on_clear, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":4246,"byte_end":4264,"line_start":109,"line_end":109,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"                                <EncryptionControls","highlight_start":34,"highlight_end":52}],"label":"the trait `HasProp<on_clear, _>` is not implemented for `AssertAllProps`, which is required by `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>: AllPropsFor<EncryptionControlsPropsBuilder, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":2843,"byte_end":4821,"line_start":83,"line_end":124,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        html! {","highlight_start":9,"highlight_end":16},{"text":"            <div class=\"container mx-auto px-4 py-8\">","highlight_start":1,"highlight_end":54},{"text":"                <h1 class=\"text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white\">","highlight_start":1,"highlight_end":95},{"text":"                    {\"Encrypt PDF\"}","highlight_start":1,"highlight_end":36},{"text":"                </h1>","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                if let Some(error) = &self.error {","highlight_start":1,"highlight_end":51},{"text":"                    <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">","highlight_start":1,"highlight_end":125},{"text":"                        <span class=\"block sm:inline\">{error}</span>","highlight_start":1,"highlight_end":69},{"text":"                        <button ","highlight_start":1,"highlight_end":33},{"text":"                            class=\"absolute top-0 bottom-0 right-0 px-4 py-3\"","highlight_start":1,"highlight_end":78},{"text":"                            onclick={ctx.link().callback(|_| EncryptMsg::ClearError)}","highlight_start":1,"highlight_end":86},{"text":"                        >","highlight_start":1,"highlight_end":26},{"text":"                            <span class=\"sr-only\">{\"Close\"}</span>","highlight_start":1,"highlight_end":67},{"text":"                            <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">","highlight_start":1,"highlight_end":104},{"text":"                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />","highlight_start":1,"highlight_end":130},{"text":"                            </svg>","highlight_start":1,"highlight_end":35},{"text":"                        </button>","highlight_start":1,"highlight_end":34},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">","highlight_start":1,"highlight_end":68},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        <FileUpload on_file_selected={onfile} />","highlight_start":1,"highlight_end":65},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <div class=\"mt-8\">","highlight_start":1,"highlight_end":47},{"text":"                                <EncryptionControls","highlight_start":1,"highlight_end":52},{"text":"                                    document={doc.clone()}","highlight_start":1,"highlight_end":59},{"text":"                                    on_encrypt={onencrypt}","highlight_start":1,"highlight_end":59},{"text":"                                    on_reset={onreset}","highlight_start":1,"highlight_end":55},{"text":"                                />","highlight_start":1,"highlight_end":35},{"text":"                            </div>","highlight_start":1,"highlight_end":35},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <PdfPreview document={doc.clone()} />","highlight_start":1,"highlight_end":66},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                </div>","highlight_start":1,"highlight_end":23},{"text":"            </div>","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2853,"byte_end":2890,"line_start":114,"line_end":114,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[proc_macro_error::proc_macro_error]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `HasProp<P, How>`:\n  `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\nand 58 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropsdocument<AssertAllProps>` to implement `HasProp<on_clear, &dyn HasProp<on_clear, _>>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"2 redundant requirements hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `CheckEncryptionControlsPropsAll<HasEncryptionControlsPropson_reset<...>>` to implement `HasAllProps<EncryptionControlsProps, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `AllPropsFor<EncryptionControlsPropsBuilder, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3548,"byte_end":3553,"line_start":74,"line_end":74,"column_start":16,"column_end":21,"is_primary":false,"text":[{"text":"        pub fn build<How>(self) -> B::Output","highlight_start":16,"highlight_end":21}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3611,"byte_end":3630,"line_start":76,"line_end":76,"column_start":20,"column_end":39,"is_primary":true,"text":[{"text":"            Token: AllPropsFor<B, How>,","highlight_start":20,"highlight_end":39}],"label":"required by this bound in `PreBuild::<Token, B>::build`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-12768932897135940167.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `AssertAllProps: HasProp<on_clear, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\encrypt.rs:109:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   <EncryptionControls\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `HasProp<on_clear, _>` is not implemented for `AssertAllProps`, which is required by `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>: AllPropsFor<EncryptionControlsPropsBuilder, _>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `HasProp<P, How>`:\u001b[0m\n\u001b[0m              `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m            and 58 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropsdocument<AssertAllProps>` to implement `HasProp<on_clear, &dyn HasProp<on_clear, _>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: 2 redundant requirements hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `CheckEncryptionControlsPropsAll<HasEncryptionControlsPropson_reset<...>>` to implement `HasAllProps<EncryptionControlsProps, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `AllPropsFor<EncryptionControlsPropsBuilder, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs:76:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn build<How>(self) -> B::Output\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Token: AllPropsFor<B, How>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-12768932897135940167.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `html` which comes from the expansion of the derive macro `Properties` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `AssertAllProps: HasProp<on_decrypt, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":4246,"byte_end":4264,"line_start":109,"line_end":109,"column_start":34,"column_end":52,"is_primary":true,"text":[{"text":"                                <EncryptionControls","highlight_start":34,"highlight_end":52}],"label":"the trait `HasProp<on_decrypt, _>` is not implemented for `AssertAllProps`, which is required by `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>: AllPropsFor<EncryptionControlsPropsBuilder, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":2843,"byte_end":4821,"line_start":83,"line_end":124,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        html! {","highlight_start":9,"highlight_end":16},{"text":"            <div class=\"container mx-auto px-4 py-8\">","highlight_start":1,"highlight_end":54},{"text":"                <h1 class=\"text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white\">","highlight_start":1,"highlight_end":95},{"text":"                    {\"Encrypt PDF\"}","highlight_start":1,"highlight_end":36},{"text":"                </h1>","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                if let Some(error) = &self.error {","highlight_start":1,"highlight_end":51},{"text":"                    <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">","highlight_start":1,"highlight_end":125},{"text":"                        <span class=\"block sm:inline\">{error}</span>","highlight_start":1,"highlight_end":69},{"text":"                        <button ","highlight_start":1,"highlight_end":33},{"text":"                            class=\"absolute top-0 bottom-0 right-0 px-4 py-3\"","highlight_start":1,"highlight_end":78},{"text":"                            onclick={ctx.link().callback(|_| EncryptMsg::ClearError)}","highlight_start":1,"highlight_end":86},{"text":"                        >","highlight_start":1,"highlight_end":26},{"text":"                            <span class=\"sr-only\">{\"Close\"}</span>","highlight_start":1,"highlight_end":67},{"text":"                            <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">","highlight_start":1,"highlight_end":104},{"text":"                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />","highlight_start":1,"highlight_end":130},{"text":"                            </svg>","highlight_start":1,"highlight_end":35},{"text":"                        </button>","highlight_start":1,"highlight_end":34},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">","highlight_start":1,"highlight_end":68},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        <FileUpload on_file_selected={onfile} />","highlight_start":1,"highlight_end":65},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <div class=\"mt-8\">","highlight_start":1,"highlight_end":47},{"text":"                                <EncryptionControls","highlight_start":1,"highlight_end":52},{"text":"                                    document={doc.clone()}","highlight_start":1,"highlight_end":59},{"text":"                                    on_encrypt={onencrypt}","highlight_start":1,"highlight_end":59},{"text":"                                    on_reset={onreset}","highlight_start":1,"highlight_end":55},{"text":"                                />","highlight_start":1,"highlight_end":35},{"text":"                            </div>","highlight_start":1,"highlight_end":35},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <PdfPreview document={doc.clone()} />","highlight_start":1,"highlight_end":66},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                </div>","highlight_start":1,"highlight_end":23},{"text":"            </div>","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2853,"byte_end":2890,"line_start":114,"line_end":114,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[proc_macro_error::proc_macro_error]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `HasProp<P, How>`:\n  `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\nand 58 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropsdocument<AssertAllProps>` to implement `HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"2 redundant requirements hidden","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `CheckEncryptionControlsPropsAll<HasEncryptionControlsPropson_reset<...>>` to implement `HasAllProps<EncryptionControlsProps, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `AllPropsFor<EncryptionControlsPropsBuilder, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3548,"byte_end":3553,"line_start":74,"line_end":74,"column_start":16,"column_end":21,"is_primary":false,"text":[{"text":"        pub fn build<How>(self) -> B::Output","highlight_start":16,"highlight_end":21}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3611,"byte_end":3630,"line_start":76,"line_end":76,"column_start":20,"column_end":39,"is_primary":true,"text":[{"text":"            Token: AllPropsFor<B, How>,","highlight_start":20,"highlight_end":39}],"label":"required by this bound in `PreBuild::<Token, B>::build`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-12768932897135940167.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `AssertAllProps: HasProp<on_decrypt, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\encrypt.rs:109:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   <EncryptionControls\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `HasProp<on_decrypt, _>` is not implemented for `AssertAllProps`, which is required by `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>: AllPropsFor<EncryptionControlsPropsBuilder, _>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `HasProp<P, How>`:\u001b[0m\n\u001b[0m              `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m            and 58 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropsdocument<AssertAllProps>` to implement `HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: 2 redundant requirements hidden\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `CheckEncryptionControlsPropsAll<HasEncryptionControlsPropson_reset<...>>` to implement `HasAllProps<EncryptionControlsProps, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<...>>` to implement `AllPropsFor<EncryptionControlsPropsBuilder, (&dyn HasProp<_EncryptionControlsProps::document, &dyn HasProp<_EncryptionControlsProps::document, HasEncryptionControlsPropsdocument<AssertAllProps>>>, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, &dyn HasProp<_EncryptionControlsProps::i18n, _>>>, &dyn HasProp<on_clear, &dyn HasProp<on_clear, &dyn HasProp<on_clear, _>>>, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, &dyn HasProp<on_decrypt, _>>>, &dyn HasProp<on_encrypt, HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>, HasEncryptionControlsPropson_reset<HasEncryptionControlsPropson_encrypt<HasEncryptionControlsPropsdocument<AssertAllProps>>>)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs:76:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn build<How>(self) -> B::Output\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Token: AllPropsFor<B, How>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-12768932897135940167.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the full name for the type has been written to 'C:\\Users\\info\\Dropbox\\code\\Pdf_Encript_Rust_Wasm\\target\\debug\\deps\\pdf_encrypt_rust_wasm-1d8891f2dd8c4757.long-type-10064487923856846199.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `html` which comes from the expansion of the derive macro `Properties` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `AssertAllProps: HasProp<_PdfPreviewProps::i18n, _>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":4680,"byte_end":4690,"line_start":119,"line_end":119,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"                            <PdfPreview document={doc.clone()} />","highlight_start":30,"highlight_end":40}],"label":"the trait `HasProp<_PdfPreviewProps::i18n, _>` is not implemented for `AssertAllProps`, which is required by `HasPdfPreviewPropsdocument<AssertAllProps>: AllPropsFor<PdfPreviewPropsBuilder, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\pages\\encrypt.rs","byte_start":2843,"byte_end":4821,"line_start":83,"line_end":124,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        html! {","highlight_start":9,"highlight_end":16},{"text":"            <div class=\"container mx-auto px-4 py-8\">","highlight_start":1,"highlight_end":54},{"text":"                <h1 class=\"text-3xl font-bold mb-8 text-center text-gray-900 dark:text-white\">","highlight_start":1,"highlight_end":95},{"text":"                    {\"Encrypt PDF\"}","highlight_start":1,"highlight_end":36},{"text":"                </h1>","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                if let Some(error) = &self.error {","highlight_start":1,"highlight_end":51},{"text":"                    <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">","highlight_start":1,"highlight_end":125},{"text":"                        <span class=\"block sm:inline\">{error}</span>","highlight_start":1,"highlight_end":69},{"text":"                        <button ","highlight_start":1,"highlight_end":33},{"text":"                            class=\"absolute top-0 bottom-0 right-0 px-4 py-3\"","highlight_start":1,"highlight_end":78},{"text":"                            onclick={ctx.link().callback(|_| EncryptMsg::ClearError)}","highlight_start":1,"highlight_end":86},{"text":"                        >","highlight_start":1,"highlight_end":26},{"text":"                            <span class=\"sr-only\">{\"Close\"}</span>","highlight_start":1,"highlight_end":67},{"text":"                            <svg class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">","highlight_start":1,"highlight_end":104},{"text":"                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />","highlight_start":1,"highlight_end":130},{"text":"                            </svg>","highlight_start":1,"highlight_end":35},{"text":"                        </button>","highlight_start":1,"highlight_end":34},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">","highlight_start":1,"highlight_end":68},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        <FileUpload on_file_selected={onfile} />","highlight_start":1,"highlight_end":65},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <div class=\"mt-8\">","highlight_start":1,"highlight_end":47},{"text":"                                <EncryptionControls","highlight_start":1,"highlight_end":52},{"text":"                                    document={doc.clone()}","highlight_start":1,"highlight_end":59},{"text":"                                    on_encrypt={onencrypt}","highlight_start":1,"highlight_end":59},{"text":"                                    on_reset={onreset}","highlight_start":1,"highlight_end":55},{"text":"                                />","highlight_start":1,"highlight_end":35},{"text":"                            </div>","highlight_start":1,"highlight_end":35},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                    <div>","highlight_start":1,"highlight_end":26},{"text":"                        if let Some(doc) = &self.pdf_document {","highlight_start":1,"highlight_end":64},{"text":"                            <PdfPreview document={doc.clone()} />","highlight_start":1,"highlight_end":66},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    </div>","highlight_start":1,"highlight_end":27},{"text":"                </div>","highlight_start":1,"highlight_end":23},{"text":"            </div>","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"html!","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2853,"byte_end":2890,"line_start":114,"line_end":114,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[proc_macro_error::proc_macro_error]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `HasProp<P, How>`:\n  `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\n  `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\nand 58 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `HasPdfPreviewPropsdocument<AssertAllProps>` to implement `HasProp<_PdfPreviewProps::i18n, &dyn HasProp<_PdfPreviewProps::i18n, _>>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `CheckPdfPreviewPropsAll<HasPdfPreviewPropsdocument<AssertAllProps>>` to implement `HasAllProps<PdfPreviewProps, (HasPdfPreviewPropsdocument<AssertAllProps>, &dyn HasProp<_PdfPreviewProps::i18n, _>)>`","code":null,"level":"note","spans":[{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"unsatisfied trait bound introduced in this `derive` macro","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\pdf_preview.rs","byte_start":231,"byte_end":241,"line_start":8,"line_end":8,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"required for `HasPdfPreviewPropsdocument<AssertAllProps>` to implement `AllPropsFor<PdfPreviewPropsBuilder, (HasPdfPreviewPropsdocument<AssertAllProps>, &dyn HasProp<_PdfPreviewProps::i18n, _>)>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3548,"byte_end":3553,"line_start":74,"line_end":74,"column_start":16,"column_end":21,"is_primary":false,"text":[{"text":"        pub fn build<How>(self) -> B::Output","highlight_start":16,"highlight_end":21}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs","byte_start":3611,"byte_end":3630,"line_start":76,"line_end":76,"column_start":20,"column_end":39,"is_primary":true,"text":[{"text":"            Token: AllPropsFor<B, How>,","highlight_start":20,"highlight_end":39}],"label":"required by this bound in `PreBuild::<Token, B>::build`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `AssertAllProps: HasProp<_PdfPreviewProps::i18n, _>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\encrypt.rs:119:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   <PdfPreview document={doc.clone()} />\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `HasProp<_PdfPreviewProps::i18n, _>` is not implemented for `AssertAllProps`, which is required by `HasPdfPreviewPropsdocument<AssertAllProps>: AllPropsFor<PdfPreviewPropsBuilder, _>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `HasProp<P, How>`:\u001b[0m\n\u001b[0m              `CheckChildrenPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckConcreteRouterPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckContextProviderPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckDecryptPagePropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckEncryptionControlsPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckErrorBoundaryPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckFileUploadPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m              `CheckLinkPropsAll<B>` implements `HasProp<P, &dyn HasProp<P, How>>`\u001b[0m\n\u001b[0m            and 58 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `HasPdfPreviewPropsdocument<AssertAllProps>` to implement `HasProp<_PdfPreviewProps::i18n, &dyn HasProp<_PdfPreviewProps::i18n, _>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:8:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required for `CheckPdfPreviewPropsAll<HasPdfPreviewPropsdocument<AssertAllProps>>` to implement `HasAllProps<PdfPreviewProps, (HasPdfPreviewPropsdocument<AssertAllProps>, &dyn HasProp<_PdfPreviewProps::i18n, _>)>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\pdf_preview.rs:8:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10munsatisfied trait bound introduced in this `derive` macro\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required for `HasPdfPreviewPropsdocument<AssertAllProps>` to implement `AllPropsFor<PdfPreviewPropsBuilder, (HasPdfPreviewPropsdocument<AssertAllProps>, &dyn HasProp<_PdfPreviewProps::i18n, _>)>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `yew::html::component::properties::__macro::PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-0.20.0\\src\\html\\component\\properties.rs:76:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn build<How>(self) -> B::Output\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrequired by a bound in this associated function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Token: AllPropsFor<B, How>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PreBuild::<Token, B>::build`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `html` which comes from the expansion of the derive macro `Properties` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `onfile` on type `FileUploadProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3507,"byte_end":3513,"line_start":104,"line_end":104,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"                            {onfile}","highlight_start":30,"highlight_end":36}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available field is: `on_file_selected`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `onfile` on type `FileUploadProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:104:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   {onfile}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available field is: `on_file_selected`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `accept` on type `FileUploadProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3543,"byte_end":3549,"line_start":105,"line_end":105,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"                            accept=\"application/pdf\"","highlight_start":29,"highlight_end":35}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available field is: `on_file_selected`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `accept` on type `FileUploadProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:105:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   accept=\"application/pdf\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available field is: `on_file_selected`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `i18n` on type `FileUploadProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3596,"byte_end":3600,"line_start":106,"line_end":106,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"                            i18n={i18n.clone()}","highlight_start":29,"highlight_end":33}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available field is: `on_file_selected`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `i18n` on type `FileUploadProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:106:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   i18n={i18n.clone()}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available field is: `on_file_selected`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `onfile` found for struct `FileUploadPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3507,"byte_end":3513,"line_start":104,"line_end":104,"column_start":30,"column_end":36,"is_primary":true,"text":[{"text":"                            {onfile}","highlight_start":30,"highlight_end":36}],"label":"method not found in `FileUploadPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":210,"byte_end":220,"line_start":7,"line_end":7,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `onfile` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":210,"byte_end":220,"line_start":7,"line_end":7,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `onfile` found for struct `FileUploadPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:104:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   {onfile}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `FileUploadPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:7:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `onfile` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `accept` found for struct `FileUploadPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3543,"byte_end":3549,"line_start":105,"line_end":105,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"                            accept=\"application/pdf\"","highlight_start":29,"highlight_end":35}],"label":"method not found in `FileUploadPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":210,"byte_end":220,"line_start":7,"line_end":7,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `accept` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":210,"byte_end":220,"line_start":7,"line_end":7,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `accept` found for struct `FileUploadPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:105:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   accept=\"application/pdf\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `FileUploadPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:7:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `accept` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `i18n` found for struct `FileUploadPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3596,"byte_end":3600,"line_start":106,"line_end":106,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"                            i18n={i18n.clone()}","highlight_start":29,"highlight_end":33}],"label":"method not found in `FileUploadPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":210,"byte_end":220,"line_start":7,"line_end":7,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `i18n` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":210,"byte_end":220,"line_start":7,"line_end":7,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `i18n` found for struct `FileUploadPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:106:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   i18n={i18n.clone()}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `FileUploadPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:7:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `i18n` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `onpassword` on type `EncryptionControlsProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3837,"byte_end":3847,"line_start":112,"line_end":112,"column_start":37,"column_end":47,"is_primary":true,"text":[{"text":"                                    onpassword={onpassword}","highlight_start":37,"highlight_end":47}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `onpassword` on type `EncryptionControlsProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:112:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   onpassword={onpassword}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `onsubmit` on type `EncryptionControlsProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3897,"byte_end":3905,"line_start":113,"line_end":113,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                                    onsubmit={ondecrypt}","highlight_start":37,"highlight_end":45}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `onsubmit` on type `EncryptionControlsProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:113:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   onsubmit={ondecrypt}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `mode` on type `EncryptionControlsProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3954,"byte_end":3958,"line_start":114,"line_end":114,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"                                    mode=\"decrypt\"","highlight_start":37,"highlight_end":41}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `mode` on type `EncryptionControlsProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:114:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   mode=\"decrypt\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `disabled` on type `EncryptionControlsProps`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":4005,"byte_end":4013,"line_start":115,"line_end":115,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                                    disabled={self.loading}","highlight_start":37,"highlight_end":45}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `disabled` on type `EncryptionControlsProps`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:115:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   disabled={self.loading}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: available fields are: `document`, `i18n`, `on_encrypt`, `on_decrypt`, `on_clear`, `on_reset`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `onpassword` found for struct `EncryptionControlsPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3837,"byte_end":3847,"line_start":112,"line_end":112,"column_start":37,"column_end":47,"is_primary":true,"text":[{"text":"                                    onpassword={onpassword}","highlight_start":37,"highlight_end":47}],"label":"method not found in `EncryptionControlsPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `onpassword` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `onpassword` found for struct `EncryptionControlsPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:112:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   onpassword={onpassword}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `EncryptionControlsPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `onpassword` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `onsubmit` found for struct `EncryptionControlsPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3897,"byte_end":3905,"line_start":113,"line_end":113,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                                    onsubmit={ondecrypt}","highlight_start":37,"highlight_end":45}],"label":"method not found in `EncryptionControlsPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `onsubmit` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `onsubmit` found for struct `EncryptionControlsPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:113:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   onsubmit={ondecrypt}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `EncryptionControlsPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `onsubmit` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `mode` found for struct `EncryptionControlsPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":3954,"byte_end":3958,"line_start":114,"line_end":114,"column_start":37,"column_end":41,"is_primary":true,"text":[{"text":"                                    mode=\"decrypt\"","highlight_start":37,"highlight_end":41}],"label":"method not found in `EncryptionControlsPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `mode` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `mode` found for struct `EncryptionControlsPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:114:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   mode=\"decrypt\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `EncryptionControlsPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `mode` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `disabled` found for struct `EncryptionControlsPropsBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":4005,"byte_end":4013,"line_start":115,"line_end":115,"column_start":37,"column_end":45,"is_primary":true,"text":[{"text":"                                    disabled={self.loading}","highlight_start":37,"highlight_end":45}],"label":"method not found in `EncryptionControlsPropsBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":"method `disabled` not found for this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\presentation\\components\\encryption_controls.rs","byte_start":390,"byte_end":400,"line_start":18,"line_end":18,"column_start":10,"column_end":20,"is_primary":false,"text":[{"text":"#[derive(Properties, PartialEq)]","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Properties)]","def_site_span":{"file_name":"C:\\Users\\info\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\yew-macro-0.20.0\\src\\lib.rs","byte_start":2468,"byte_end":2522,"line_start":102,"line_end":102,"column_start":1,"column_end":55,"is_primary":false,"text":[{"text":"pub fn derive_props(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `disabled` found for struct `EncryptionControlsPropsBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:115:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   disabled={self.loading}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `EncryptionControlsPropsBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\presentation\\components\\encryption_controls.rs:18:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Properties, PartialEq)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `disabled` not found for this struct\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no field `message` on type `()`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":4358,"byte_end":4365,"line_start":124,"line_end":124,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"                                    message={i18n.get_translation(\"decrypt.processing\").unwrap_or_default()}","highlight_start":37,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `message` on type `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:124:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   message={i18n.get_translation(\"decrypt.processing\").unwrap_or_de\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no method named `message` found for struct `yew::html::component::properties::__macro::EmptyBuilder` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\decrypt.rs","byte_start":4358,"byte_end":4365,"line_start":124,"line_end":124,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"                                    message={i18n.get_translation(\"decrypt.processing\").unwrap_or_default()}","highlight_start":37,"highlight_end":44}],"label":"method not found in `EmptyBuilder`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `message` found for struct `yew::html::component::properties::__macro::EmptyBuilder` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\decrypt.rs:124:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   message={i18n.get_translation(\"decrypt.processing\").unwrap_or_de\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `EmptyBuilder`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no variant or associated item named `default` found for enum `Theme` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\presentation\\pages\\settings.rs","byte_start":1551,"byte_end":1558,"line_start":53,"line_end":53,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"                self.theme = Theme::default();","highlight_start":37,"highlight_end":44}],"label":"variant or associated item not found in `Theme`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\domain\\entities\\user_settings.rs","byte_start":242,"byte_end":256,"line_start":12,"line_end":12,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"pub enum Theme {","highlight_start":1,"highlight_end":15}],"label":"variant or associated item `default` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `default`, perhaps you need to implement one of them:\ncandidate #1: `std::default::Default`\ncandidate #2: `tinyvec::Array`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `default` found for enum `Theme` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\pages\\settings.rs:53:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.theme = Theme::default();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Theme`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0msrc\\domain\\entities\\user_settings.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Theme {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `default` not found for this enum\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is implemented and in scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: the following traits define an item `default`, perhaps you need to implement one of them:\u001b[0m\n\u001b[0m           candidate #1: `std::default::Default`\u001b[0m\n\u001b[0m           candidate #2: `tinyvec::Array`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"no function or associated item named `raw` found for struct `LocalStorage` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":450,"byte_end":453,"line_start":18,"line_end":18,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"    gloo::storage::LocalStorage::raw();","highlight_start":34,"highlight_end":37}],"label":"function or associated item not found in `LocalStorage`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"trait `Storage` which provides `raw` is implemented but not in scope; perhaps you want to import it","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"use gloo::gloo_storage::Storage;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no function or associated item named `raw` found for struct `LocalStorage` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:18:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    gloo::storage::LocalStorage::raw();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `LocalStorage`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: trait `Storage` which provides `raw` is implemented but not in scope; perhaps you want to import it\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ use gloo::gloo_storage::Storage;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `wasm_bindgen::JsCast`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\file_upload.rs","byte_start":4,"byte_end":24,"line_start":1,"line_end":1,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use wasm_bindgen::JsCast;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `wasm_bindgen::JsCast`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\file_upload.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse wasm_bindgen::JsCast;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `metadata`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":780,"byte_end":788,"line_start":33,"line_end":33,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let metadata = PdfMetadata {","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\domain\\entities\\pdf_document.rs","byte_start":780,"byte_end":788,"line_start":33,"line_end":33,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let metadata = PdfMetadata {","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"_metadata","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `metadata`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\domain\\entities\\pdf_document.rs:33:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let metadata = PdfMetadata {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_metadata`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `add_toast`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\presentation\\components\\toast.rs","byte_start":2983,"byte_end":2992,"line_start":112,"line_end":112,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let add_toast = {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\toast.rs","byte_start":2983,"byte_end":2992,"line_start":112,"line_end":112,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let add_toast = {","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_add_toast","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `add_toast`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\toast.rs:112:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let add_toast = {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_add_toast`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected a type, found a trait","code":{"code":"E0782","explanation":"Trait objects must include the `dyn` keyword.\n\nErroneous code example:\n\n```edition2021,compile_fail,E0782\ntrait Foo {}\nfn test(arg: Box<Foo>) {} // error!\n```\n\nTrait objects are a way to call methods on types that are not known until\nruntime but conform to some trait.\n\nTrait objects should be formed with `Box<dyn Foo>`, but in the code above\n`dyn` is left off.\n\nThis makes it harder to see that `arg` is a trait object and not a\nsimply a heap allocated type called `Foo`.\n\nTo fix this issue, add `dyn` before the trait name.\n\n```edition2021\ntrait Foo {}\nfn test(arg: Box<dyn Foo>) {} // ok!\n```\n\nThis used to be allowed before edition 2021, but is now an error.\n"},"level":"error","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":930,"byte_end":947,"line_start":41,"line_end":41,"column_start":32,"column_end":49,"is_primary":true,"text":[{"text":"    fn catch(&mut self, error: std::error::Error) -> bool {","highlight_start":32,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use a new generic type parameter, constrained by `std::error::Error`","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":930,"byte_end":947,"line_start":41,"line_end":41,"column_start":32,"column_end":49,"is_primary":true,"text":[{"text":"    fn catch(&mut self, error: std::error::Error) -> bool {","highlight_start":32,"highlight_end":49}],"label":null,"suggested_replacement":"T","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":911,"byte_end":911,"line_start":41,"line_end":41,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    fn catch(&mut self, error: std::error::Error) -> bool {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"<T: std::error::Error>","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"you can also use an opaque type, but users won't be able to specify the type parameter when calling the `fn`, having to rely exclusively on type inference","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":930,"byte_end":930,"line_start":41,"line_end":41,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"    fn catch(&mut self, error: std::error::Error) -> bool {","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"impl ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null},{"message":"alternatively, use a trait object to accept any type that implements `std::error::Error`, accessing its methods at runtime using dynamic dispatch","code":null,"level":"help","spans":[{"file_name":"src\\presentation\\components\\error_boundary.rs","byte_start":930,"byte_end":930,"line_start":41,"line_end":41,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"    fn catch(&mut self, error: std::error::Error) -> bool {","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"&dyn ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0782]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a type, found a trait\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\presentation\\components\\error_boundary.rs:41:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn catch(&mut self, error: std::error::Error) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use a new generic type parameter, constrained by `std::error::Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn catch\u001b[0m\u001b[0m\u001b[38;5;10m<T: std::error::Error>\u001b[0m\u001b[0m(&mut self, error: \u001b[0m\u001b[0m\u001b[38;5;10mT\u001b[0m\u001b[0m) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++++++++\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can also use an opaque type, but users won't be able to specify the type parameter when calling the `fn`, having to rely exclusively on type inference\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn catch(&mut self, error: \u001b[0m\u001b[0m\u001b[38;5;10mimpl \u001b[0m\u001b[0mstd::error::Error) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: alternatively, use a trait object to accept any type that implements `std::error::Error`, accessing its methods at runtime using dynamic dispatch\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn catch(&mut self, error: \u001b[0m\u001b[0m\u001b[38;5;10m&dyn \u001b[0m\u001b[0mstd::error::Error) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 87 previous errors; 22 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 87 previous errors; 22 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0061, E0277, E0308, E0369, E0407, E0412, E0432, E0433, E0583...","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0061, E0277, E0308, E0369, E0407, E0412, E0432, E0433, E0583...\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
